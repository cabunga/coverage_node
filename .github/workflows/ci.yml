name: NODE CI
on: [push]
jobs:
  test-build:
    name: Test & build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 15
      - run: yarn
      # Build modules
      - run: yarn build
      # Build sonar reports
      - run: yarn test-coverage
      - name: Create file ${{ inputs.tag }}
        run: |
          ls
          echo "sonar.branch.name=main" >> sonar-project.properties
          echo "sonar.organization=cabunga-github" >> sonar-project.properties
          echo "sonar.projectKey=cabunga-github_coveragephp" >> sonar-project.properties
          echo "sonar.sources=." >> sonar-project.properties  
          echo "sonar.php.coverage.reportPaths=coverage.xml" >> sonar-project.properties  
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}     
      # Build Storybook
      - run: yarn build-storybook
      - run: mkdir -p deploy/storybook
      - run: cp -R ./built-storybook/storybook/. ./deploy/storybook
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v2
        with:
          name: deploy
          path: deploy/
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/
  sonarcloud:
    runs-on: ubuntu-latest
    needs: test-build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage
          path: coverage
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Download deploy artifact
        uses: actions/download-artifact@v2
        with:
          name: deploy
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
